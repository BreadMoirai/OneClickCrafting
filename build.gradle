import java.util.concurrent.Callable

plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.breadmoirai.github-release' version "2.3.7"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name 'Gegy'
        url 'https://maven.gegy.dev'
    }
    maven {
        name 'TerraformersMC'
        url "https://maven.terraformersmc.com/releases/"
    }

}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
    modImplementation "dev.lambdaurora:spruceui:${project.spruceui_version}"
    include "dev.lambdaurora:spruceui:${project.spruceui_version}"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
        duplicatesStrategy(DuplicatesStrategy.WARN)
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
        duplicatesStrategy(DuplicatesStrategy.WARN)
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
tasks.register('sourcesJar', Jar) {
    dependsOn classes
    archiveClassifier.set "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

githubRelease {
//    token getProperty("oneclickcrafting.github.key") as String
    // This is your personal access token with Repo permissions
    // You get this from your user settings > developer settings > Personal Access Tokens
//    owner "breadmoirai" // default is the last part of your group. Eg group: "com.github.breadmoirai" => owner: "breadmoirai"
    repo.set "OneClickCrafting" // by default this is set to your project name
//    tagName "v1.0.0" // by default this is set to "v${project.version}"
//    targetCommitish "main" // by default this is set to "main"
//    releaseName "v1.0.0" // Release title, by default this is the same as the tagName
//    body.set provider<String>(changelog {}) as Provider<? extends CharSequence> // by default this is empty)
    draft.set false // by default this is false
//    prerelease false // by default this is false
    releaseAssets remapJar.archiveFile // this points to which files you want to upload as assets with your release
//
    allowUploadToExisting.set false
    overwrite.set false // by default false; if set to true, will delete an existing release with the same tag and name
//    dryRun false // by default false; you can use this to see what actions would be taken without making a release
}